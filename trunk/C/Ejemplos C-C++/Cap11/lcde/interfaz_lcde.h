/* interfaz_lcde.h
 */
#if !defined(_INTERFAZ_LCSE_H)
#define _INTERFAZ_LCSE_H


// Tipo Elemento (un elemento de la lista) ///////////////////////
#include "elemento.h"

// Interfaz para manipular una lcde //////////////////////////////
//
// Parámetros de la lista
typedef struct
{
  Elemento *ultimo;      // apuntará siempre al último elemento
  Elemento *actual;      // apuntará siempre al elemento accedido
  int numeroDeElementos; // número de elementos de la lista
  int posicion;          // índice del elemento apuntado por actual
} tlcde;

// Mostrar un mensaje de error y abortar el programa
void error();

// Crear un nuevo elemento
Elemento *nuevoElemento();

// Iniciar una estructura de tipo tlcde
void iniciarLcde(tlcde *lcde);

// Añadir un nuevo elemento a la lista a continuación
// del elemento actual; el nuevo elemento pasa a ser el
// actual
void insertar(void *e, tlcde *lcde);

// La función borrar devuelve los datos del elemento
// apuntado por actual y lo elimina de la lista.
void *borrar(tlcde *lcde);

// Avanzar la posición actual al siguiente elemento.
void irAlSiguiente(tlcde *lcde);

// Retrasar la posición actual al elemento anterior.
void irAlAnterior(tlcde *lcde);

// Hacer que la posición actual sea el principio de la lista.
void irAlPrincipio(tlcde *lcde);

// El final de la lista es ahora la posición actual.
void irAlFinal(tlcde *lcde);

// Posicionarse en el elemento i
int irAl(int i, tlcde *lcde);

// Devolver el puntero a los datos asociados
// con el elemento actual
void *obtenerActual(tlcde *lcde);

// Devolver el puntero a los datos asociados
// con el elemento de índice i
void *obtener(int i, tlcde *lcde);

// Establecer nuevos datos para el elemento actual
void modificar(void *pNuevosDatos, tlcde *lcde);


#endif // _INTERFAZ_LCSE_H